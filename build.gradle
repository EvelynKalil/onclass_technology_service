plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.6'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.onclass'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.4")
}

dependencies {
	// Core
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// R2DBC MySQL (choose ONE driver; this is recommended)
	implementation 'io.asyncer:r2dbc-mysql:1.3.2'
	implementation 'io.r2dbc:r2dbc-pool'

	// Observability
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	// Resilience4j for Spring Boot 3
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
	implementation 'io.github.resilience4j:resilience4j-reactor:2.2.0'
	implementation 'io.github.resilience4j:resilience4j-retry:2.2.0'
	implementation 'io.github.resilience4j:resilience4j-bulkhead:2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-aop' // enables aspects for resilience4j

	// Swagger / OpenAPI for WebFlux
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

	// Mapping
	implementation 'org.mapstruct:mapstruct:1.6.0'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.0'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// Para validaciones en DTOs
	implementation "org.springframework.boot:spring-boot-starter-validation"

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
